interpolate-creds: &interpolate-creds
  do:
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: credhub_admin
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      PREFIX: '/concourse/main/pks-azure'
      SKIP_MISSING: true
    input_mapping:
      files: configuration-repo
    output_mapping:
      interpolated-files: interpolated-creds
  - task: merge-files
    image: platform-automation-image
    file: configuration-repo/tasks/merge-files/task.yml
    input_mapping:
      files: configuration-repo
    output_mapping:
      interpolated-files: merged-files
  - in_parallel:
    - get: texplate-binary
      params:
        globs:
        - texplate_linux_amd64
    - get: jq-binary
      params:
        globs:
        - jq-linux64
  - task: tfstate-interpolate
    image: platform-automation-image
    file: configuration-repo/tasks/tfstate-interpolate/task.yml
    input_mapping:
      tf_state: terraform-infra
      tasks: configuration-repo
      texplate: texplate-binary
      jq: jq-binary
      files: configuration-repo
    params:
      INTERPOLATION_PATHS: config/

put-state: &put-state
  do:
  - put: state
    params:
      file: generated-state/state-pks.yml

resource_types:
- name: azure-blobstore
  type: docker-image
  source:
    repository: pcfabr/azure-blobstore-resource

- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 0.11.14

resources:
- name: configuration-repo
  type: git
  source:
    private_key: ((github_private_key))
    uri: git@github.com:EngineerBetter/pa_pks_azure.git
    branch: master

- name: terraforming-azure-tarball
  type: github-release
  source:
    owner: pivotal-cf
    repository: terraforming-azure
    access_token: ((github_access_token))

- name: texplate-binary
  type: github-release
  source:
    owner: pivotal-cf
    repository: texplate
    access_token: ((github_access_token))

- name: jq-binary
  type: github-release
  source:
    owner: stedolan
    repository: jq
    access_token: ((github_access_token))

- name: terraform-infra
  type: terraform
  source:
    env_name: pks
    backend_type: azurerm
    backend_config:
      storage_account_name: ((storage_account_name))
      container_name: resources
      key: terraform.tfstate
      access_key: ((storage_account_key))

- name: installation
  type: azure-blobstore
  source:
    storage_account_name: ((storage_account_name))
    storage_account_key: ((storage_account_key))
    container: resources
    regexp: pks-installation-(.*).zip

- name: state
  type: azure-blobstore
  source:
    storage_account_name: ((storage_account_name))
    storage_account_key: ((storage_account_key))
    container: resources
    regexp: state-pks-(.*).yml

- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation
    product_version: 4\.(.*)
    sort_by: semver

- name: ops-manager
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ops-manager
    product_version: 2\.6\.(.*)
    sort_by: semver

- name: pks
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: pivotal-container-service
    product_version: 1\.5\.(.*)
    sort_by: semver

- name: pks-stemcell
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: stemcells-ubuntu-xenial
    product_version: 315\.(.*)
    sort_by: semver

- name: one-time-trigger
  type: time
  source:
    interval: 999999h

- name: daily-trigger
  type: time
  source:
    interval: 24h

jobs:
- name: terraform-infra
  serial: true
  serial_groups:
  - install
  plan:
  - in_parallel:
    - get: terraforming-azure-tarball
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs:
        - "*.tgz"
    - get: configuration-repo
      trigger: true
  - task: extract-tf-files
    image: platform-automation-image
    config:
      platform: linux
      inputs:
      - name: terraforming-azure-tarball
      - name: configuration-repo
      outputs:
      - name: terraforming-azure
      run:
        path: bash
        args:
        - -euc
        - |
          version=$(cat terraforming-azure-tarball/version)
          tar xzf terraforming-azure-tarball/"terraforming-azure-v${version}.tar.gz" -C terraforming-azure
          cp configuration-repo/terraform/extra-outputs.tf terraforming-azure/terraforming-pks/
  - put: terraform-infra
    params:
      terraform_source: terraforming-azure/terraforming/terraforming-pks
      vars:
        subscription_id: ((subscription_id))
        tenant_id: ((tenant_id))
        client_id: ((client_id))
        client_secret: ((client_secret))
        env_name: pks
        location: UK South
        dns_suffix: azure.engineerbetter.com
        ops_manager_image_uri: ""

- name: install-opsman
  serial: true
  serial_groups:
  - install
  plan:
    - in_parallel:
      - get: one-time-trigger
        trigger: true
      - get: platform-automation-image
        resource: platform-automation
        params:
          unpack: true
          globs:
          - "*.tgz"
      - get: platform-automation-tasks
        resource: platform-automation
        params:
          globs:
          - "*.zip"
          unpack: true
      - get: ops-manager
        params:
          globs:
          - "ops-manager-azure-*.yml"
      - get: configuration-repo
      - get: state
      - get: terraform-infra
        passed:
        - terraform-infra
        params:
          output_statefile: true
    - <<: *interpolate-creds
    - task: create-vm
      image: platform-automation-image
      file: platform-automation-tasks/tasks/create-vm.yml
      input_mapping:
        image: ops-manager
        config: interpolated-files
      params:
        OPSMAN_CONFIG_FILE: config/opsman.yml
        STATE_FILE: state-pks.yml
      ensure: *put-state
    - task: configure-authentication
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-authentication.yml
      attempts: 10
      input_mapping:
        env: interpolated-files
        config: interpolated-files
      params:
        ENV_FILE: config/env.yml
        AUTH_CONFIG_FILE: config/auth.yml
    - task: configure-director
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-director.yml
      input_mapping:
        config: interpolated-files
        env: interpolated-files
      params:
        ENV_FILE: config/env.yml
    - task: apply-director-changes
      image: platform-automation-image
      file: platform-automation-tasks/tasks/apply-director-changes.yml
      input_mapping:
        env: interpolated-files

- name: export-installation
  serial: true
  plan:
    - in_parallel:
      - get: daily-trigger
        trigger: true
      - get: state
        passed:
        - install-opsman
      - get: platform-automation-image
        resource: platform-automation
        params:
          unpack: true
          globs:
          - "*.tgz"
      - get: platform-automation-tasks
        resource: platform-automation
        params:
          globs:
          - "*.zip"
          unpack: true
          passed: [ install-opsman ]
      - get: configuration-repo
        passed:
        - terraform-infra
        trigger: true
    - <<: *interpolate-creds
    - task: export-installation
      image: platform-automation-image
      file: platform-automation-tasks/tasks/export-installation.yml
      input_mapping:
        env: interpolated-files
      params:
        INSTALLATION_FILE: pks-installation-$timestamp.zip
    - put: installation
      params:
        file: installation/pks-installation*.zip

- name: upgrade-opsman
  serial: true
  serial_groups:
  - install
  plan:
  - in_parallel:
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs:
        - "*.tgz"
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        globs:
        - "*.zip"
        unpack: true
    - get: installation
      passed: [ export-installation ]
    - get: configuration-repo
      trigger: true
      passed:
      - export-installation
    - get: state
    - get: ops-manager
      params:
        globs:
        - "ops-manager-azure-*.yml"
  - <<: *interpolate-creds
  - task: upgrade-opsman
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upgrade-opsman.yml
    input_mapping:
      image: ops-manager
      config: interpolated-files
      env: interpolated-files
    params:
      STATE_FILE: state-pks.yml
      INSTALLATION_FILE: pks-installation*.zip
    ensure: *put-state
  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      config: interpolated-files
      env: interpolated-files
  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-files

- name: upload-and-stage-pks
  serial: true
  plan:
    - in_parallel:
      - get: platform-automation-image
        resource: platform-automation
        params:
          unpack: true
          globs:
          - "*.tgz"
      - get: platform-automation-tasks
        resource: platform-automation
        params:
          globs:
          - "*.zip"
          unpack: true
      - get: configuration-repo
        trigger: true
        passed:
        - upgrade-opsman
      - get: pks
        params:
          globs:
          - "*.pivotal"
      - get: pks-stemcell
        params:
          globs:
          - "bosh-stemcell-*-azure-hyperv-ubuntu-xenial-go_agent.tgz"
    - <<: *interpolate-creds
    - task: upload-and-stage-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-and-stage-product.yml
      input_mapping:
        product: pks
        env: interpolated-files
    - task: upload-pks-stemcell
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-stemcell.yml
      input_mapping:
        env: interpolated-files
        stemcell: pks-stemcell

- name: configure-pks
  serial: true
  plan:
    - in_parallel:
      - get: platform-automation-image
        resource: platform-automation
        params:
          unpack: true
          globs:
          - "*.tgz"
      - get: platform-automation-tasks
        resource: platform-automation
        params:
          globs:
          - "*.zip"
          unpack: true
      - get: configuration-repo
        trigger: true
        passed:
        - upload-and-stage-pks
    - <<: *interpolate-creds
    - task: configure-pks
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      input_mapping:
        config: interpolated-files
        env: interpolated-files
      params:
        CONFIG_FILE: pks.yml

- name: apply-product-changes
  serial: true
  plan:
    - in_parallel:
      - get: platform-automation-image
        resource: platform-automation
        params:
          unpack: true
          globs:
          - "*.tgz"
      - get: platform-automation-tasks
        resource: platform-automation
        params:
          globs:
          - "*.zip"
          unpack: true
      - get: configuration-repo
        trigger: true
        passed:
        - configure-pks
    - <<: *interpolate-creds
    - task: apply-product-changes
      image: platform-automation-image
      file: platform-automation-tasks/tasks/apply-changes.yml
      input_mapping:
        env: interpolated-files
